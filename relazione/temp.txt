JavaDoc
=======

Come specificato nel Work-Tree, per semplificare la comprensione del progetto è disponibile una documentazione *JavaDoc* in `wordle/doc/`, generata dai sorgenti in `wordle/src/`: [allclasses-index](file:///home/geoteo/Documents/reti/wordle/doc/allclasses-index.html)




Scopo del progetto
==================

Il progetto mira a implementare un gioco di parole interattivo basato su una comunicazione client-server. Gli utenti possono registrarsi, effettuare il login e partecipare al gioco. Il server gestisce le richieste dei client, estrae una parola casuale dal vocabolario e fornisce gli indizi per aiutare gli utenti a individuare la parola segreta. Vengono anche tenute traccia delle statistiche di gioco di ciascun utente, come il numero di partite giocate, la percentuale di partite vinte e la lunghezza delle sequenze continue di vincite.




Descrizione delle Classi
========================

Il progetto è implementato attraverso due classi principali: `Word` e `WordList`.

La classe `Word` rappresenta una parola del gioco, composta da una stringa che rappresenta la parola segreta e un insieme di utenti che hanno giocato tale parola. La classe offre metodi per controllare la presenza di un utente nella lista dei partecipanti, aggiungere un utente alla lista e ottenere una maschera che mostra le corrispondenze tra la parola segreta e un tentativo fornito dall'utente.

La classe `WordList` rappresenta il vocabolario di parole disponibili per il gioco. Il vocabolario è rappresentato da una lista di stringhe, e il server estrae casualmente una parola dal vocabolario per ogni partita. La classe gestisce anche un `ScheduledExecutorService` che permette di estrarre una parola casuale dal vocabolario ogni tot secondi. Viene fornita anche la possibilità di controllare se una parola è presente nel vocabolario e di ottenere la parola corrente.




Architettura del Gioco
======================

L'architettura del gioco è basata su una comunicazione client-server. Il client è rappresentato dalla classe `ClientMain`, che gestisce l'interazione con l'utente attraverso una CLI (Command Line Interface) e comunica con il server tramite richieste per eseguire varie azioni, come la registrazione, il login, l'inizio del gioco, l'invio di una Guessed Word e la condivisione dei risultati. Il server è rappresentato dalla classe `ServerMain`, che gestisce le richieste dei client, memorizza gli utenti registrati, estrae una parola casuale dal vocabolario e fornisce gli indizi.

Le fasi principali del gioco sono:

1. Registrazione e login degli utenti.
2. Estrazione di una parola casuale dal vocabolario da parte del server.
3. Invio di una Guessed Word da parte del client.
4. Ricezione degli indizi da parte del client e iterazione del gioco fino alla soluzione.
5. Calcolo e visualizzazione delle statistiche degli utenti.
6. Condivisione dei risultati tramite un gruppo multicast.




Work-Tree
=========

```
wordle
├── bin
│   ├── ServerMain.class
│   ├── ...
│   └── ...
├── doc
│   ├── allclasses-index.html
│   ├── ...
│   └── ...
├── lib
│   ├── CLIENT.conf
│   ├── gson-2.10.jar
│   ├── SERVER.conf
│   ├── USERS.json
│   └── WORDS.txt
├── README.md
├── relazione
│   ├── notes
│   │   ├── assets
│   │   │   ├── before.html
│   │   │   ├── footer.html
│   │   │   ├── header.html
│   │   │   ├── link2html.lua
│   │   │   └── makenote
│   │   └── relazione.html
│   ├── relazione.md
│   └── relazione.pdf
├── src
│   ├── ClientMain.java
│   ├── ClientSetup.java
│   ├── Game.java
│   ├── MulticastReceiver.java
│   ├── MulticastSender.java
│   ├── ServerMain.java
│   ├── ServerSetup.java
│   ├── User.java
│   ├── UserList.java
│   ├── Word.java
│   └── WordList.java
└── specifiche-wordle.pdf
```
